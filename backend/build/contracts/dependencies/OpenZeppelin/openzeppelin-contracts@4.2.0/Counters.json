{
  "abi": [],
  "allSourcePaths": {
    "9": "/home/mamun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Counters.sol"
  },
  "ast": {
    "absolutePath": "/home/mamun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        2697
      ]
    },
    "id": 2698,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2625,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 2626,
          "nodeType": "StructuredDocumentation",
          "src": "58:311:9",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
        },
        "fullyImplemented": true,
        "id": 2697,
        "linearizedBaseContracts": [
          2697
        ],
        "name": "Counters",
        "nameLocation": "378:8:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Counters.Counter",
            "id": 2629,
            "members": [
              {
                "constant": false,
                "id": 2628,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "740:6:9",
                "nodeType": "VariableDeclaration",
                "scope": 2629,
                "src": "732:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2627,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "732:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "400:7:9",
            "nodeType": "StructDefinition",
            "scope": 2697,
            "src": "393:374:9",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2640,
              "nodeType": "Block",
              "src": "847:38:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2637,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "864:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2628,
                    "src": "864:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2636,
                  "id": 2639,
                  "nodeType": "Return",
                  "src": "857:21:9"
                }
              ]
            },
            "id": 2641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "782:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2632,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "806:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "790:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 2631,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2630,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2629,
                      "src": "790:7:9"
                    },
                    "referencedDeclaration": 2629,
                    "src": "790:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:25:9"
            },
            "returnParameters": {
              "id": 2636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "838:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:9:9"
            },
            "scope": 2697,
            "src": "773:112:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2654,
              "nodeType": "Block",
              "src": "944:70:9",
              "statements": [
                {
                  "id": 2653,
                  "nodeType": "UncheckedBlock",
                  "src": "954:54:9",
                  "statements": [
                    {
                      "expression": {
                        "id": 2651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 2647,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "978:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2628,
                          "src": "978:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 2650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "996:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "978:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2652,
                      "nodeType": "ExpressionStatement",
                      "src": "978:19:9"
                    }
                  ]
                }
              ]
            },
            "id": 2655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "900:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "926:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2655,
                  "src": "910:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 2643,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2642,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2629,
                      "src": "910:7:9"
                    },
                    "referencedDeclaration": 2629,
                    "src": "910:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "909:25:9"
            },
            "returnParameters": {
              "id": 2646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:9"
            },
            "scope": 2697,
            "src": "891:123:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2682,
              "nodeType": "Block",
              "src": "1073:176:9",
              "statements": [
                {
                  "assignments": [
                    2662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2662,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1091:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2682,
                      "src": "1083:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2661,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1083:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2665,
                  "initialValue": {
                    "expression": {
                      "id": 2663,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2658,
                      "src": "1099:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2664,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2628,
                    "src": "1099:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1083:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2667,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2662,
                          "src": "1131:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1139:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1131:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1142:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                          "typeString": "literal_string \"Counter: decrement overflow\""
                        },
                        "value": "Counter: decrement overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                          "typeString": "literal_string \"Counter: decrement overflow\""
                        }
                      ],
                      "id": 2666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1123:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2672,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:49:9"
                },
                {
                  "id": 2681,
                  "nodeType": "UncheckedBlock",
                  "src": "1182:61:9",
                  "statements": [
                    {
                      "expression": {
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 2673,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2658,
                            "src": "1206:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2675,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2628,
                          "src": "1206:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2676,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2662,
                            "src": "1223:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1231:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1223:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1206:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2680,
                      "nodeType": "ExpressionStatement",
                      "src": "1206:26:9"
                    }
                  ]
                }
              ]
            },
            "id": 2683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1029:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2658,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1055:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2683,
                  "src": "1039:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 2657,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2656,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2629,
                      "src": "1039:7:9"
                    },
                    "referencedDeclaration": 2629,
                    "src": "1039:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:25:9"
            },
            "returnParameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:9"
            },
            "scope": 2697,
            "src": "1020:229:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2695,
              "nodeType": "Block",
              "src": "1304:35:9",
              "statements": [
                {
                  "expression": {
                    "id": 2693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2689,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2686,
                        "src": "1314:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2628,
                      "src": "1314:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1331:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1314:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2694,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:18:9"
                }
              ]
            },
            "id": 2696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reset",
            "nameLocation": "1264:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2686,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1286:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2696,
                  "src": "1270:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 2685,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2684,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2629,
                      "src": "1270:7:9"
                    },
                    "referencedDeclaration": 2629,
                    "src": "1270:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2629_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:25:9"
            },
            "returnParameters": {
              "id": 2688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:0:9"
            },
            "scope": 2697,
            "src": "1255:84:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2698,
        "src": "370:971:9",
        "usedErrors": []
      }
    ],
    "src": "33:1309:9"
  },
  "bytecode": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c52bdcb1f5d7d73f3d9aeab635a60dc3dbd6b930b3cbcfd72ee5130fea309b564736f6c634300080c0033",
  "bytecodeSha1": "1ce946f6a4eaa185320328620ccf999b9e86db7c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Counters",
  "coverageMap": {
    "branches": {
      "9": {}
    },
    "statements": {
      "9": {}
    }
  },
  "dependencies": [],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c52bdcb1f5d7d73f3d9aeab635a60dc3dbd6b930b3cbcfd72ee5130fea309b564736f6c634300080c0033",
  "deployedSourceMap": "370:971:9:-:0;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "offset": [
    370,
    1341
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY MSTORE 0xBD 0xCB 0x1F 0x5D PUSH30 0x73F3D9AEAB635A60DC3DBD6B930B3CBCFD72EE5130FEA309B564736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        370,
        1341
      ],
      "op": "PUSH20",
      "path": "9",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "EQ",
      "path": "9"
    },
    "23": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "28": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "DUP1",
      "path": "9"
    },
    "31": {
      "fn": null,
      "offset": [
        370,
        1341
      ],
      "op": "REVERT",
      "path": "9"
    }
  },
  "sha1": "b72ed17629688a8bf4e4a4db437b500d09d08a60",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n",
  "sourceMap": "370:971:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:971:9;;;;;;;;;;;;;;;;;",
  "sourcePath": "/home/mamun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Counters.sol",
  "type": "library"
}